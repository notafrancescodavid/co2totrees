name: publish

on:
  push:
    branches: ["main"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.actor }}/co2totrees:latest

jobs:
  publish:
    name: publish image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Login
        run: |
          echo "${{ secrets.CR_PAT_CN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Build and Publish
        run: |
          docker build . --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

  deploy:
    needs: publish
    name: deploy image
    runs-on: ubuntu-latest

    steps:
      - name: Install SSH Keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY_CN }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST_CN }} >> ~/.ssh/known_hosts

      - name: Connect and Deploy
        run: >
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SSH_USER_CN }}@${{ secrets.SSH_HOST_CN }} << 'EOF'
          cd ~
          echo "${{ secrets.CR_PAT_CN }}" | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          docker run -p 8080:3000 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          exit
          EOF

      - name: Cleanup SSH Keys
        run: rm -rf ~/.ssh
